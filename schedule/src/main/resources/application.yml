#
# See https://cloud.spring.io/spring-cloud-stream-binder-kafka/spring-cloud-stream-binder-kafka.html#_configuration_options_2
# See https://docs.spring.io/spring-cloud-stream-binder-kafka/docs/3.0.10.RELEASE/reference/html/spring-cloud-stream-binder-kafka.html#_configuration_options_2
# See https://docs.confluent.io/current/streams/developer-guide/config-streams.html
#

server:
  port: 8070

logging:
  level:
    ROOT: INFO
    # set the 3 lines to warn to suppress large config list output on startup
    org.apache.kafka.clients.admin.AdminClientConfig: WARN
    org.apache.kafka.clients.producer.ProducerConfig: WARN
    org.apache.kafka.clients.consumer.ConsumerConfig: WARN
    # Suppress "Node 0 disconnected." (INFO) messages and "Broker may not be available" messages (WARN).
    org.apache.kafka.clients.NetworkClient: ERROR

spring:
  application:
    name: schedule
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    bootstrap-servers: 'localhost:9092'
    jaas:
      enabled: false
    security:
      protocol: PLAINTEXT
    properties:
      sasl:
        mechanism: PLAIN
  cloud:
    stream:
      kafka:
        binder:
          auto-create-topics: false
      # which steps are performed?
      function.definition: 'processSchedule;processAgentA01;processAgentA02,processAgentA03,processResumeB01,processResumeB02,processNotify'
      instance-count: 1 # for local development 1 (is Default)
      bindings:
        # PROCESSOR processSchedule - - - - - - - - - - - - - - - - - - - -
        processSchedule-in-0:
          group: ${application.id.processSchedule}
          destination: ${application.topics.queueAccepted.topic}
          consumer: # consumer properties on each function (processor) level
            auto-startup: true
            concurrency: 1 # See "2.19.4 Special note on concurrency" - translated to num.stream.thread
        processSchedule-A01:
          destination: ${application.topics.queueScheduledA01.topic}
        processSchedule-A02:
          destination: ${application.topics.queueScheduledA02.topic}
        processSchedule-A03:
          destination: ${application.topics.queueScheduledA03.topic}
        processSchedule-B01:
          destination: ${application.topics.queuePausedB01.topic}
        processSchedule-B02:
          destination: ${application.topics.queuePausedB02.topic}
        processSchedule-out-error:
          destination: ${application.topics.queueAccepted.error}
        # PROCESSOR processResumeB01 - - - - - - - - - - - - - - - - - - - -
        processResumeB01-in-0:
          group: ${application.id.processResumeB01}
          destination: ${application.topics.queuePausedB01.topic}
          consumer: # consumer properties on each function (processor) level
            auto-startup: false # !!! No auto startup
            concurrency: 1 # See "2.19.4 Special note on concurrency" - translated to num.stream.thread
        processResumeB01-A01:
          destination: ${application.topics.queueScheduledA01.topic}
        processResumeB01-A02:
          destination: ${application.topics.queueScheduledA02.topic}
        processResumeB01-A03:
          destination: ${application.topics.queueScheduledA03.topic}
        # PROCESSOR processResumeB02 - - - - - - - - - - - - - - - - - - - -
        processResumeB02-in-0:
          group: ${application.id.processResumeB02}
          destination: ${application.topics.queuePausedB02.topic}
          consumer: # consumer properties on each function (processor) level
            auto-startup: false # !!! No auto startup
            concurrency: 1 # See "2.19.4 Special note on concurrency" - translated to num.stream.thread
        processResumeB02-A01:
          destination: ${application.topics.queueScheduledA01.topic}
        processResumeB02-A02:
          destination: ${application.topics.queueScheduledA02.topic}
        processResumeB02-A03:
          destination: ${application.topics.queueScheduledA03.topic}
        # PROCESSOR processAgentA01 - - - - - - - - - - - - - - - - - - - -
        processAgentA01-in-0:
          group: ${application.id.processAgentA01}
          destination: ${application.topics.queueScheduledA01.topic}
          consumer: # consumer properties on each function (processor) level
            auto-startup: true
            concurrency: 1 # See "2.19.4 Special note on concurrency" - translated to num.stream.thread
        processAgentA01-out-0:
          destination: ${application.topics.queueCompleted.topic}
        processAgentA01-out-failed:
          destination: ${application.topics.queueFailedA01.topic}
        processAgentA01-out-error:
          destination: ${application.topics.queueScheduledA01.error}
        # PROCESSOR processAgentA02 - - - - - - - - - - - - - - - - - - - -
        processAgentA02-in-0:
          group: ${application.id.processAgentA02}
          destination: ${application.topics.queueScheduledA02.topic}
          consumer: # consumer properties on each function (processor) level
            auto-startup: true
            concurrency: 1 # See "2.19.4 Special note on concurrency" - translated to num.stream.thread
        processAgentA02-out-0:
          destination: ${application.topics.queueCompleted.topic}
        processAgentA02-out-failed:
          destination: ${application.topics.queueFailedA02.topic}
        processAgentA02-out-error:
          destination: ${application.topics.queueScheduledA02.error}
        # PROCESSOR processAgentA03 - - - - - - - - - - - - - - - - - - - -
        processAgentA03-in-0:
          group: ${application.id.processAgentA03}
          destination: ${application.topics.queueScheduledA03.topic}
          consumer: # consumer properties on each function (processor) level
            auto-startup: true
            concurrency: 1 # See "2.19.4 Special note on concurrency" - translated to num.stream.thread
        processAgentA03-out-0:
          destination: ${application.topics.queueCompleted.topic}
        processAgentA03-out-failed:
          destination: ${application.topics.queueFailedA03.topic}
        processAgentA03-out-error:
          destination: ${application.topics.queueScheduledA03.error}
        # PROCESSOR processNotify - - - - - - - - - - - - - - - - - - - -
        processNotify-in-0:
          group: ${application.id.processNotify}
          destination: ${application.topics.queueNotified.topic}
          consumer: # consumer properties on each function (processor) level
            auto-startup: true
            concurrency: 1 # See "2.19.4 Special note on concurrency" - translated to num.stream.thread
        processNotify-out-0:
          destination: ${application.topics.queueNotified.topic}
        processNotify-out-error:
          destination: ${application.topics.queueNotified.error}

management:
  endpoints:
    web:
      exposure:
        include: ['health', 'info', 'bindings', 'logfile', 'metrics', 'configprops', 'env', 'kafkastreamstopology']
  endpoint:
    health:
      show-details: ALWAYS
  health:
    binders:
      enabled: true # is default

application:
  job-admin-host: 'localhost:8093'
  job-admin-path: '/api/processes/{id}'

  topics:
    queueAccepted:
      topic: job-accepted
      error: job-accepted-err
    queueScheduledA01:
      topic: job-scheduled-A01
      error: job-scheduled-err
    queueScheduledA02:
      topic: job-scheduled-A02
      error: job-scheduled-err
    queueScheduledA03:
      topic: job-scheduled-A03
      error: job-scheduled-err
    queuePausedB01:
      topic: job-paused-B01
      error: job-paused-err
    queuePausedB02:
      topic: job-paused-B02
      error: job-paused-err
    queueCompleted:
      topic: job-completed
      error: job-completed-err
    queueFailedA01:
      topic: job-failed-A01
      error: job-failed-err
    queueFailedA02:
      topic: job-failed-A03
      error: job-failed-err
    queueFailedA03:
      topic: job-failed-A03
      error: job-failed-err
    queueNotified:
      topic: job-notified
  id:
    # the id may be used as the prefix for changelog (KTable) topics, so it has to be configurable
    processSchedule: processSchedule
    processAgentA01: processAgentA01
    processAgentA02: processAgentA02
    processAgentA03: processAgentA03
    processResumeB01: processResumeB01
    processResumeB02: processResumeB02
    processNotify: processNotify
