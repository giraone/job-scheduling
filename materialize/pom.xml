<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.5</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>com.giraone.jobs</groupId>
  <artifactId>materialize</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>materialize</name>
  <description>Sample Spring Boot WebFlux project using reactive Kafka and R2DC to map status events from a topic to a postgres database table</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>17</java.version>
    <reactor.kafka.version>1.3.14</reactor.kafka.version>
    <r2dbc-migrate.version>2.7.8</r2dbc-migrate.version>
    <!-- Test dependency versions -->
    <assertj.version>3.23.1</assertj.version>
    <testcontainers.version>1.17.6</testcontainers.version>
    <reactor-tools.version>3.5.0</reactor-tools.version>
    <!-- Plugin versions and properties -->
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <!-- Plugin properties -->
    <junit.utReportFolder>target/test-results/test</junit.utReportFolder>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-r2dbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>io.projectreactor.kafka</groupId>
      <artifactId>reactor-kafka</artifactId>
      <version>${reactor.kafka.version}</version>
    </dependency>

    <!-- Connection pool for R2DBX - see https://github.com/r2dbc/r2dbc-pool -->
    <dependency>
      <groupId>io.r2dbc</groupId>
      <artifactId>r2dbc-pool</artifactId>
    </dependency>
    <!-- Postgres as database via R2DBC -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>r2dbc-postgresql</artifactId>
    </dependency>

    <!-- Database migration -->
    <dependency>
      <groupId>name.nkonev.r2dbc-migrate</groupId>
      <artifactId>r2dbc-migrate-spring-boot-starter</artifactId>
      <version>${r2dbc-migrate.version}</version>
    </dependency>

    <!-- Jackson Time Serialization -->
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>

    <!-- Tooling Dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- TEST dependencies -->

    <!-- Spring Boot testing with JUnit5 only -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Testcontainers for testing with R2DB/Postgres-->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>r2dbc</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Testcontainers for testing with reactor-kafka/Kafka -->
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Provides StepVerifier for testing -->
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- For debugging during tests with ReactorDebugAgent.init() from IDE -->
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-tools</artifactId>
      <version>${reactor-tools.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Use an assertion language, that is better than hamcrest -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>${project.name}</finalName>
    <defaultGoal>spring-boot:run</defaultGoal>

    <plugins>
      <!-- Provides support for application properties in IDEs -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <skip>false</skip>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <!-- add sources to build -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <!-- Force alphabetical order to have a reproducible build -->
          <runOrder>alphabetical</runOrder>
          <reportsDirectory>${junit.utReportFolder}</reportsDirectory>
        </configuration>
      </plugin>

      <!-- mvn versions:update-parent && mvn versions:update-properties && mvn versions:use-latest-versions -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <configuration>
          <rulesUri>file:///${project.basedir}/mvn-versions-rules.xml</rulesUri>
        </configuration>
      </plugin>

      <!-- Test coverage with Jacoco -->
      <!-- Use default report location else sonar can not show test coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>pre-unit-tests</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>