version: "3.5"
services:
  receiver:
    image: receiver:latest
    hostname: receiver
    ports:
      - "8090:8080"
    container_name: receiver
    networks:
      - jobs
    depends_on:
      - kafka-1
    environment:
      # IMPORTANT: -Xms/-Xmx are ignored, when JVM detects that it running in a container
      # Leads to 1600 MB / 6368 MB on a 32GB (including swap) machine
      JAVA_OPTS: -XX:InitialRAMPercentage=5 -XX:MaxRAMPercentage=20 -XX:+PrintFlagsFinal -XshowSettings:vm
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka-1:9092"
      LOGGING_LEVEL: WARN

  materialize:
    image: materialize:latest
    hostname: materialize
    ports:
      - "8091:8080"
    container_name: materialize
    networks:
      - jobs
    environment:
      JAVA_OPTS: -XX:InitialRAMPercentage=5 -XX:MaxRAMPercentage=20
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka-1:9092"
      SPRING_R2DBC_URL: "r2dbc:pool:postgresql://postgres:5432/states?initialSize=20&maxSize=50&poolName=pool&registerJmx=true"
      SPRING_R2DBC_USERNAME: "user"  
      SPRING_R2DBC_PASSWORD: "password" 
      LOGGING_LEVEL: WARN      

  schedule:
    image: schedule:latest
    hostname: schedule
    ports:
      - "8092:8080"
    container_name: schedule
    networks:
      - jobs
    depends_on:
      - kafka-1
    environment:
      JAVA_OPTS: -XX:InitialRAMPercentage=5 -XX:MaxRAMPercentage=20
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka-1:9092"
      APPLICATION_JOB_ADMIN_HOST: "jobadmin:8093"
      LOGGING_LEVEL: WARN

  jobadmin:
    image: jobadmin:latest
    hostname: jobadmin
    ports:
      - "8093:8093"
    container_name: jobadmin
    networks:
      - jobs
    depends_on:
      - postgres
    environment:
      JAVA_OPTS: -XX:InitialRAMPercentage=5 -XX:MaxRAMPercentage=20
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/states"
      SPRING_DATASOURCE_USERNAME: "user"  
      SPRING_DATASOURCE_PASSWORD: "password"
      LOGGING_LEVEL: WARN      

  zk-1:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zk-1
    ports:
      - "2181:2181"
    container_name: zk-1
    volumes:
      - ${CONTAINER_DATA:-./data}/zk-1/log:/var/lib/zookeeper/log
      - ${CONTAINER_DATA:-./data}/zk-1/data:/var/lib/zookeeper/data
    networks:
      - jobs
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: "zk-1:2888:3888"

  kafka-1:
    image: confluentinc/cp-enterprise-kafka:7.3.0
    hostname: kafka-1
    ports:
      - "9092:9092"
    container_name: kafka-1
    networks:
      - jobs
    depends_on:
      - zk-1  
    volumes:
      - ${CONTAINER_DATA:-./data}/kafka-1:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: "zk-1:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-1:9092"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=DEBUG,kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      # Needs more setup
      # KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      # CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      # CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092"
      # CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: "SASL_PLAINTEXT"
      # CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: "PLAIN"

  postgres:
    image: postgres:14.5
    hostname: postgres
    container_name: postgres
    volumes:
      - ${CONTAINER_DATA:-./data}/postgres:/var/lib/postgresql/data
    networks:
      - jobs
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=states
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - PGDATA=/tmp

networks:
  jobs:
